services:
  db:
    image: postgres:16-alpine
    container_name: sepj-db
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sepj-backend
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      OLLAMA_BASE_URL: http://ollama:${OLLAMA_PORT}
      API_PORT: ${API_PORT}
    command: uvicorn app.main:app --host 0.0.0.0 --port ${API_PORT} --reload
    volumes:
      - ./backend:/app
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started

  frontend:
    image: node:20-alpine
    container_name: sepj-frontend
    working_dir: /app
    command: sh -c "npm ci || npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend

  ollama:
    image: ollama/ollama:latest
    container_name: sepj-ollama
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    volumes:
      - ollama:/root/.ollama
    #entrypoint: ["/bin/sh","-c","ollama serve & sleep 2 && ollama pull ${OLLAMA_MODEL} && wait"]

volumes:
  pgdata:
  ollama:
